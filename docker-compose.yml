version: '3.8'

#Docker Networks
networks:
  laravel:
    driver: bridge

#Volumes
volumes:
  dbdata:
    driver: local

# Workflow
services:
  nginx:
    build:
      context: .
      dockerfile: ./compose/nginx/Dockerfile
    container_name: nginx
    ports:
      - "8080:80"
      # Port for xdebug (ensure this matches the remote_port in the xdebug.ini)
      - "9001:9001"
    volumes:
      - ./source:/var/www/html:delegated
    depends_on:
      - php
      - mysql
    networks:
      - laravel

  redis:
    image: "redis:alpine"
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - laravel

  php:
    build:
      context: .
      dockerfile: ./compose/php/Dockerfile
    container_name: php
    volumes:
      - ./source:/var/www/html:delegated
      # Enable xdebug
      - ./compose/php/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    ports:
      - "9000:9000"
    networks:
      - laravel

  composer:
    build:
      context: .
      dockerfile: ./compose/php/composer/Dockerfile
    container_name: composer
    volumes:
      - ./source:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: laravel
    networks:
      - laravel
    entrypoint: ['composer', '--ignore-platform-reqs']

  npm:
    image: node:15.0.1
    container_name: npm
    volumes:
      - ./source:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']

  artisan:
    build:
      context: .
      dockerfile: ./compose/php/Dockerfile
    container_name: artisan
    volumes:
      - ./source:/var/www/html:delegated
    depends_on:
      - mysql
    working_dir: /var/www/html
    user: laravel
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel
  